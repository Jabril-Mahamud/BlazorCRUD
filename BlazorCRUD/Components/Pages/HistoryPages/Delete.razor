@page "/history/delete"
@inject BlazorCRUD.Data.ApplicationDbContext DB
@using BlazorCRUD
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>History</h4>
    <hr />
    @if (history is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Content</dt>
            <dd class="col-sm-10">@history.Content</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Sauce</dt>
            <dd class="col-sm-10">@history.Sauce</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Time</dt>
            <dd class="col-sm-10">@history.DateTime</dd>
        </dl>
        <EditForm method="post" Model="history" OnValidSubmit="DeleteHistory" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(history is null)">Delete</button> |
            <a href="/history">Back to List</a>
        </EditForm>
    }
</div>

@code {
    History? history;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        history = await DB.History.FirstOrDefaultAsync(m => m.Id == Id);

        if (history is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHistory()
    {
        DB.History.Remove(history!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/history");
    }
}