@page "/cards"
@inject BlazorCRUD.Data.ApplicationDbContext DB

<PageTitle>Card Display</PageTitle>

<h1><center>Card Display</center></h1>

<div class="card-container">
    @foreach (var history in DB.History)
    {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@history.Content</h5>
                <p class="card-text"><strong>App:</strong> @history.App</p>
                <p class="card-text">
                    <strong>Sauce:</strong>
                    <iframe width="100%" height="315" src="@GetEmbedUrl(history.Sauce)" frameborder="0" allowfullscreen></iframe>
                </p>
                <p class="card-text"><strong>Date:</strong> @history.DateTime.ToShortDateString()</p>
            </div>
        </div>
    }
</div>

<div class="card-container">
    @foreach (var robot in DB.Robot)
    {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@robot.Name</h5>
                <p class="card-text"><strong>Company:</strong> @robot.Company</p>
                <p class="card-text"><strong>Release Date:</strong> @robot.ReleaseDate?.ToShortDateString()</p>
            </div>
        </div>
<style>
    .card-container {
        display: flex;
        flex-direction: column; /* Stacked vertically */
        gap: 20px;
        align-items: center;
    }

    .card {
        width: 80%; /* Larger width */
        max-width: 800px; /* Limit maximum width */
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 2px 2px 12px rgba(0, 0, 0, 0.1);
        margin: 10px;
    }

    .card-body {
        padding: 10px;
    }

    .card-title {
        font-size: 1.25rem;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }
</style>

        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }

</style>

@code {
    private string GetEmbedUrl(string? url)
    {
        if (string.IsNullOrWhiteSpace(url))
        {
            return string.Empty;
        }

        // Assuming the url is a YouTube link
        var uri = new Uri(url);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var videoId = query["v"];

        return $"https://www.youtube.com/embed/{videoId}";
    }
}
